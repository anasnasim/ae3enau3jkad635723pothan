apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'

ext {
    mFlavour = "FLAVOR_NAME";
    mBaseURL = "BASE_URL";
}

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "info.vnk.billex"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 2
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    buildTypes {
        buildTypes {
            release {
                zipAlignEnabled true
                shrinkResources true
                debuggable false
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            debug {
                debuggable true
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    flavorDimensions "billx"
    productFlavors {
        VaisakhMarketing {
            dimension "billx"
            applicationIdSuffix ".vm"
            buildConfigField 'String', "${mFlavour}", '"VM"'
            buildConfigField 'String', "${mBaseURL}", '"http://exioxtechnologies.com/vaisakhmarketing/api/v1/index.php/"'
        }
        UniGreen {
            dimension "billx"
            applicationIdSuffix ".ug"
            buildConfigField 'String', "${mFlavour}", '"UNI_GREEN"'
            buildConfigField 'String', "${mBaseURL}", '"http://exiox.com/unigreen/api/v1/index.php/"'
        }
        FathimaAgroMills {
            dimension "billx"
            applicationIdSuffix ".fam"
            buildConfigField 'String', "${mFlavour}", '"FAM-WEB"'
            buildConfigField 'String', "${mBaseURL}", '"http://fathimaagromills.in/web/api/v1/index.php/"'
        }
        QuickMix {
            dimension "billx"
            applicationIdSuffix ".qm"
            buildConfigField 'String', "${mFlavour}", '"QMIX"'
            buildConfigField 'String', "${mBaseURL}", '"http://quickmixkerala.in/web/api/v1/index.php/"'
        }
        VaisakhMarketingTest {
            dimension "billx"
            applicationIdSuffix ".vmt"
            buildConfigField 'String', "${mFlavour}", '"Test"'
            buildConfigField 'String', "${mBaseURL}", '"http://exioxtechnologies.com/vm/api/v1/index.php/"'
        }
        FathimaAgroMillsTest {
            dimension "billx"
            applicationIdSuffix ".famt"
            buildConfigField 'String', "${mFlavour}", '"FAM"'
            buildConfigField 'String', "${mBaseURL}", '"http://exioxtechnologies.com/fathima-agro-mills/api/v1/index.php/"'
        }
        FathimaAgroMillsTHRTest {
            dimension "billx"
            applicationIdSuffix ".famthrt"
            buildConfigField 'String', "${mFlavour}", '"FAM_THR"'
            buildConfigField 'String', "${mBaseURL}", '"http://exioxtechnologies.com/illical/web/api/v1/"'
        }
        QuickMixTest {
            dimension "billx"
            applicationIdSuffix ".qmt"
            buildConfigField 'String', "${mFlavour}", '"QMIX"'
            buildConfigField 'String', "${mBaseURL}", '"http://exioxtechnologies.com/quickmix/api/v1/index.php/"'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    implementation 'com.android.support:multidex:1.0.0'
    implementation 'com.android.support:cardview-v7:25.1.1'
    implementation 'com.android.support:appcompat-v7:25.1.1'
    implementation 'com.android.support:design:25.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    //For Handling Database connectivity
    //For Handling image loading as caching
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    //For API calls
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    //Bottom popup
    //compile 'com.github.javiersantos:BottomDialogs:1.2.1'
    //For Dialog
    implementation 'me.drakeet.materialdialog:library:1.3.1'

    implementation 'com.shawnlin:PreferencesManager:1.0.2'
    implementation('com.melnykov:floatingactionbutton:1.3.0') {
        exclude group: 'com.android.support'
    }

    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'

}

ribbonizer {
    // "manifest application[android:icon]" is automatically added to the list
    iconNames "@drawable/ic_notification", "@drawable/widget_preview"

    builder { variant, iconFile ->
        // change ribbon colors by product flavors
        if (variant.flavorName == "QMIX") {
            return grayRibbonFilter(variant, iconFile)
        } else if (variant.flavorName == "VM") {
            // customColorRibbonFilter allows setting any color code
            def filter = customColorRibbonFilter(variant, iconFile, "#00C89C")
            // Finer control of the label text can be achieved by setting it manually, or set to
            // null for an unlabelled ribbon. The default is to use the flavor name.
            filter.label = "QA" + variant.versionCode
            return filter
        } else if (variant.flavorName == "FAM" || variant.flavorName == "FAM-WEB") {
            return yellowRibbonFilter(variant, iconFile)
        } else if (variant.flavorName == "UNI_GREEN") {
            return yellowRibbonFilter(variant, iconFile)
        }  else if (variant.buildType.name == "debug") {
            if (variant.flavorName == "production") {
                // Particular configurations can be skipped by returning no filters
                return null
            } else {
                // Other filters can be applied, as long as they implement Consumer<BufferedImage>
                //return grayScaleFilter(variant, iconFile)

                def filter = customColorRibbonFilter(variant, iconFile, "#00C89C")
                // Finer control of the label text can be achieved by setting it manually, or set to
                // null for an unlabelled ribbon. The default is to use the flavor name.
                filter.label = "FAM" /*+ variant.versionCode*/
                return filter
            }
        } else {
            return greenRibbonFilter(variant, iconFile)
        }
    }
//Although `canary` build-type is marked as `non-debuggable`
    //we can still force specific variants to be ribbonized:
    forcedVariantsNames "localCanary"
}